package com.mechoy.controller;

import javafx.beans.value.ChangeListener;
import javafx.beans.value.ObservableValue;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.control.TextArea;

public class HistoryController {

    @FXML
    public TextArea historyApplicationLog;

    @FXML
    public TextArea historyGenerateLog;

    public static TextArea historyApplicationTextArea = null;

    public static TextArea historyGenerateTextArea = null;

    @FXML
    public void initialize() {
        // 设置TextArea的自动换行
        historyApplicationLog.setWrapText(true);
        historyGenerateLog.setWrapText(true);

        // 设置TextArea始终显示在最后一行
        historyApplicationLog.setScrollTop(Double.MAX_VALUE);
        historyGenerateLog.setScrollTop(Double.MAX_VALUE);

        // 设置 TextArea 的最大高度，以限制最大显示行数
        historyApplicationLog.setPrefRowCount(5); // 设置最大显示行数为 5 行
        historyGenerateLog.setPrefRowCount(10);

//        // 设置最大显示行数，通过增加事件来确定
//        historyApplicationLog.textProperty().addListener(new ChangeListener<String>() {
//            @Override
//            public void changed(ObservableValue<? extends String> observable, String oldValue, String newValue) {
//                limitLines(historyApplicationLog,10);
//            }
//        });
//        historyGenerateLog.textProperty().addListener(new ChangeListener<String>() {
//            @Override
//            public void changed(ObservableValue<? extends String> observable, String oldValue, String newValue) {
//                limitLines(historyGenerateLog,20);
//            }
//        });


        if (HistoryController.historyApplicationTextArea == null) {
            HistoryController.historyApplicationTextArea = this.historyApplicationLog;
        }

        if (HistoryController.historyGenerateTextArea == null) {
            HistoryController.historyGenerateTextArea = this.historyGenerateLog;
        }


    }

    /**
     * 清空程序运行日志按钮
     * @param event
     */
    @FXML
    void onApplicationLogClearButton(ActionEvent event) {
        historyApplicationLog.clear();
    }

    /**
     * 清空生成日志按钮
     * @param event
     */
    @FXML
    void onGenerateLogClearButton(ActionEvent event) {
        historyGenerateLog.clear();
    }

    /**
     * 设置最大显示行数
     * @param textArea
     */
//    private void limitLines(TextArea textArea,int maxLines) {
//            String[] lines = textArea.getText().split("\n");
//
//        // 如果行数超过限制，删除多余的行
//        if (lines.length > maxLines) {
//            StringBuilder newText = new StringBuilder();
//            for (int i = lines.length - maxLines; i < lines.length; i++) {
//                newText.append(lines[i]).append("\n");
//            }
//            textArea.clear();
//            textArea.setText(newText.toString());
//            textArea.positionCaret(textArea.getText().length()); // 保持光标在最后一行
//        }
//    }
}
